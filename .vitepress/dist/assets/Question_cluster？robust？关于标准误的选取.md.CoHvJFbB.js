import{_ as o,c as e,a as s,l as t,a1 as r,o as a}from"./chunks/framework.ZVjbeeCo.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Question/cluster？robust？关于标准误的选取.md","filePath":"Question/cluster？robust？关于标准误的选取.md"}'),n={name:"Question/cluster？robust？关于标准误的选取.md"},i=t("h2",{id:"cluster-robust-关于标准误的选取",tabindex:"-1"},[s("cluster？robust？关于标准误的选取 "),t("a",{class:"header-anchor",href:"#cluster-robust-关于标准误的选取","aria-label":'Permalink to "cluster？robust？关于标准误的选取"'},"​")],-1),l=t("div",{style:{"text-align":"center"}},[t("div",{style:{border:"2px solid #ccc",padding:"10px",display:"inline-block"}},[t("iframe",{src:"//player.bilibili.com/player.html?bvid=BV1M741127xj&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",style:{width:"750px",height:"450px"}})])],-1),p=r(`<p>大家好，今天我要分享的话题是关于回归标准误的选取问题。我会在视频简介中提供相关视频，大家可以根据自己的需要观看。现在，让我们开始今天的话题。</p><p>如果你看过一些论文的代码，你可能会看到很多作者在回归后面跟上以下类似的命令：</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reg y x1 x2 ,r</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reg  y x1 x2 , cluster(id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xtreg  y x1 x2 , fe r</span></span></code></pre></div><p>这些命令的含义是什么？我们应该如何使用这些命令？今天，我们就来分享一下这个问题。</p><h2 id="这些命令的含义" tabindex="-1">这些命令的含义 <a class="header-anchor" href="#这些命令的含义" aria-label="Permalink to &quot;这些命令的含义&quot;">​</a></h2><p>虽然这三种表示方式不同，但它们都是一个意思：选用一种 <strong>&quot;稳健验标准误&quot;</strong> 也就是在计算过程中，使用这样的方式进行计算。</p><p>我们使用 <strong>&quot;聚类稳健验标准误&quot;</strong> 也就是使用这样的计算方式计算。我们可以直观地观察到，如果我们标准误的值发生变化，它就会影响我们最后的T检验的值，也就是模型的显著性。</p><p>下面，我们开始分享如何使用这些命令。</p><h2 id="异方差稳健标准误" tabindex="-1">异方差稳健标准误 <a class="header-anchor" href="#异方差稳健标准误" aria-label="Permalink to &quot;异方差稳健标准误&quot;">​</a></h2><p>异方差稳健标准误主要适用于模型中出现 <strong>异方差&quot;</strong> 但是观测值之间是相互独立的一个情况。</p><p>关于 <strong>&quot;异方差&quot;</strong> 问题，之前我们已经做过一个视频分享过，简单来讲的话，就是我们随机扰动向的这个方差跟我们的自变量有一些关系。在下图中，我们举了一种类型的 <strong>&quot;异方差&quot;</strong> 也就是随着我们x的增大，随机扰动向的方差在不断的变大。</p><p>如果出现了这样的一个情况，我们就会选择 <strong>&quot;异方差稳健标准误&quot;</strong> 对模型进行修正。</p><h2 id="聚类稳健标准误" tabindex="-1">聚类稳健标准误 <a class="header-anchor" href="#聚类稳健标准误" aria-label="Permalink to &quot;聚类稳健标准误&quot;">​</a></h2><p>聚类稳健标准误主要用于观测值存在**&quot;组内自相关&quot;** 但 **&quot;组间不相关&quot;**在这种情况下。</p><p><strong>&quot;组内自相关&quot;</strong> 一般是存在面板数据或者是时间序列数据上。简单来讲的话，就是比如说A个体第一年的数据可能跟第二年或者第三年有一定的相关性。然后这样也会有一些相关性。</p><p><strong>&quot;组间不相关&quot;</strong> 就是指A个体它的这些数据它是有相关性的，B个体它也是会有一些相关性的。但在AB组间这些随机扰动项它是不相关的。</p><p>这就是 <strong>&quot;组内自相关&quot;</strong> 但 **&quot;组间不相关&quot;**在这种情况下，我们就会选择 <strong>&quot;聚类稳健标准误&quot;</strong> 对模型进行修正。</p><p>这个ID我们可以换成行业这样一个情况下就表明的是允许行业内的公司的随机扰动有一定的相关性，但行业之间不相关。这就是 <strong>&quot;聚类文件标准误&quot;</strong> 的一个使用。</p><p>需要注意的是，在 <code>xtreg</code> 里面比较特殊，就是如果你打上 <code>robust</code> 跟 <code>cluster</code>，它的命令是等价的。换句话来讲的话，如果你在 <code>xtreg</code> 的情况下，让它使用 <strong>&quot;稳健标准误&quot;</strong> ，它会默认给你按照个体变量进行一个聚类，然后再计算。</p><p>今天分享的视频到这里就结束了，谢谢大家！</p><hr>`,21);function c(u,d,h,g,_,q){return a(),e("div",null,[i,l,s(" cluster？robust？关于标准误的选取 ==================== "),p])}const m=o(n,[["render",c]]);export{x as __pageData,m as default};
